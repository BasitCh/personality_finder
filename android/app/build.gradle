def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
  localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader)
  }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
  throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
  flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
  flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
  buildToolsVersion "30.0.2"
  compileSdkVersion 33


  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
  }

  lintOptions {
    disable 'InvalidPackage'
    checkReleaseBuilds false                                              
  }

  defaultConfig {
    applicationId "com.eightweightre"
    minSdkVersion 20
    targetSdkVersion 31
    multiDexEnabled true
    versionCode flutterVersionCode.toInteger()
    versionName flutterVersionName
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  signingConfigs {
    // debug {
    //   storeFile file("../keystore/debug.keystore")
    //   storePassword "your-store-alias"
    //   keyAlias "your-key-alias"
    //   keyPassword "your-key-password"
    // }
    // release {
    //   storeFile file("../keystore/release.keystore")
    //   storePassword "your-store-alias"
    //   keyAlias "your-key-alias"
    //   keyPassword "your-key-password"
    // }
  }


  buildTypes {
    debug {
      signingConfig signingConfigs.debug
    }
    release {
      // minifyEnabled true
      // signingConfig signingConfigs.release
      signingConfig signingConfigs.debug

    }
  }

  flavorDimensions "flavors"
  productFlavors {
    dev {
      dimension "flavors"
      applicationIdSuffix ".dev"
      versionNameSuffix "-dev"
    }
    alpha {
      dimension "flavors"
      applicationIdSuffix ".alpha"
      versionNameSuffix "-alpha"
    }
     qa {
      dimension "flavors"
      applicationIdSuffix ".qa"
      versionNameSuffix "-qa"
    }
    stage {
      dimension "flavors"
      applicationIdSuffix ".stage"
      versionNameSuffix "-stage"
    }
    beta {
      dimension "flavors"
      applicationIdSuffix ".beta"
      versionNameSuffix "-beta"
    }
    prod {
      dimension "flavors"
    }
  }
}

flutter {
  source '../..'
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  implementation platform('com.google.firebase:firebase-bom:28.1.0')
  implementation 'com.google.firebase:firebase-analytics'
  implementation 'androidx.multidex:multidex:2.0.1'
  implementation 'com.google.android.gms:play-services-base:17.6.0'
  testImplementation 'junit:junit:4.12'
  androidTestImplementation 'androidx.test.ext:junit:1.1.1'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}
