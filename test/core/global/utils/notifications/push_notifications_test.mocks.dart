// Mocks generated by Mockito 5.3.0 from annotations
// in morphosis_template/test/core/global/utils/notifications/push_notifications_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:firebase_messaging/firebase_messaging.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:morphosis_template/core/global/util/notifications/push_notifications.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNotificationSettings_0 extends _i1.SmartFake
    implements _i2.NotificationSettings {
  _FakeNotificationSettings_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [PushNotifications].
///
/// See the documentation for Mockito's code generation for more information.
class MockPushNotifications extends _i1.Mock implements _i3.PushNotifications {
  MockPushNotifications() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.NotificationSettings get settings => (super.noSuchMethod(
          Invocation.getter(#settings),
          returnValue:
              _FakeNotificationSettings_0(this, Invocation.getter(#settings)))
      as _i2.NotificationSettings);
  @override
  set settings(_i2.NotificationSettings? _settings) =>
      super.noSuchMethod(Invocation.setter(#settings, _settings),
          returnValueForMissingStub: null);
  @override
  _i4.Future<String?> getToken() =>
      (super.noSuchMethod(Invocation.method(#getToken, []),
          returnValue: _i4.Future<String?>.value()) as _i4.Future<String?>);
  @override
  _i4.Future<void> notificationSettings({bool? notificationStatus}) =>
      (super.noSuchMethod(
              Invocation.method(#notificationSettings, [],
                  {#notificationStatus: notificationStatus}),
              returnValue: _i4.Future<void>.value(),
              returnValueForMissingStub: _i4.Future<void>.value())
          as _i4.Future<void>);
  @override
  _i4.Future<void> requestNotificationPermission(
          {bool? isEnabled, _i2.NotificationSettings? nSettings}) =>
      (super.noSuchMethod(
              Invocation.method(#requestNotificationPermission, [],
                  {#isEnabled: isEnabled, #nSettings: nSettings}),
              returnValue: _i4.Future<void>.value(),
              returnValueForMissingStub: _i4.Future<void>.value())
          as _i4.Future<void>);
}
