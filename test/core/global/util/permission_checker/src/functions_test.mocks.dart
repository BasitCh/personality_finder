// Mocks generated by Mockito 5.3.0 from annotations
// in morphosis_template/test/core/global/util/permission_checker/src/functions_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:morphosis_template/core/global/util/permission_checker/src/functions.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PermissionFuncs].
///
/// See the documentation for Mockito's code generation for more information.
class MockPermissionFuncs extends _i1.Mock implements _i2.PermissionFuncs {
  MockPermissionFuncs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String getLng() =>
      (super.noSuchMethod(Invocation.method(#getLng, []), returnValue: '')
          as String);
  @override
  String getMessage(String? permissionType) =>
      (super.noSuchMethod(Invocation.method(#getMessage, [permissionType]),
          returnValue: '') as String);
  @override
  _i3.Future<bool> isFirstTimeStoragePermission() =>
      (super.noSuchMethod(Invocation.method(#isFirstTimeStoragePermission, []),
          returnValue: _i3.Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> isFirstTimeLocationRequest() =>
      (super.noSuchMethod(Invocation.method(#isFirstTimeLocationRequest, []),
          returnValue: _i3.Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> isFirstTimeCameraPermission() =>
      (super.noSuchMethod(Invocation.method(#isFirstTimeCameraPermission, []),
          returnValue: _i3.Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> isFirstTimeContactsPermission() =>
      (super.noSuchMethod(Invocation.method(#isFirstTimeContactsPermission, []),
          returnValue: _i3.Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> isFirstTimeMicrophonePermission() => (super.noSuchMethod(
      Invocation.method(#isFirstTimeMicrophonePermission, []),
      returnValue: _i3.Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> isFirstTimeSpeechPermission() =>
      (super.noSuchMethod(Invocation.method(#isFirstTimeSpeechPermission, []),
          returnValue: _i3.Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> isFirstTimeNotificationPermission() => (super.noSuchMethod(
      Invocation.method(#isFirstTimeNotificationPermission, []),
      returnValue: _i3.Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> isFirstTimeMediaLibraryPermission() => (super.noSuchMethod(
      Invocation.method(#isFirstTimeMediaLibraryPermission, []),
      returnValue: _i3.Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> isFirstTimeCalenderPermission() =>
      (super.noSuchMethod(Invocation.method(#isFirstTimeCalenderPermission, []),
          returnValue: _i3.Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> isFirstTimeReminderPermission() =>
      (super.noSuchMethod(Invocation.method(#isFirstTimeReminderPermission, []),
          returnValue: _i3.Future<bool>.value(false)) as _i3.Future<bool>);
}
